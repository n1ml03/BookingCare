{"ast":null,"code":"import actionTypes from '../actions/actionTypes';\nconst initialState = {\n  isloadingGender: false,\n  genders: [],\n  positions: [],\n  role: [],\n  users: [],\n  dataDoctors: [],\n  allDoctors: [],\n  detailDoctor: [],\n  allScheduleTime: [],\n  allRequiredDoctorInfo: []\n};\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = {\n        ...state\n      };\n      copyState.isloadingGender = true;\n      return {\n        ...copyState\n      };\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.isloadingGender = false;\n      state.genders = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_GENDER_FAIL:\n      state.isloadingGender = false;\n      state.genders = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_POSITION_SUCCESS:\n      state.positions = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_POSITION_FAIL:\n      state.positions = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ROLEID_SUCCESS:\n      state.role = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ROLEID_FAIL:\n      state.role = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALL_USER_SUCCESS:\n      state.users = action.users;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALL_USER_FAIL:\n      state.users = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\n      state.dataDoctors = action.dataDoctors;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_TOP_DOCTOR_FAIL:\n      state.dataDoctors = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\n      state.allDoctors = action.dataDr;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALL_DOCTOR_FAIL:\n      state.allDoctors = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_DETAIL_DOCTOR_SUCCESS:\n      state.detailDoctor = action.dataDetailDoctor;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_DETAIL_DOCTOR_FAIL:\n      state.detailDoctor = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\n      state.allScheduleTime = action.dataTime;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAIL:\n      state.allScheduleTime = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS:\n      state.allRequiredDoctorInfo = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAIL:\n      state.allRequiredDoctorInfo = [];\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\nexport default adminReducer;","map":{"version":3,"names":["actionTypes","initialState","isloadingGender","genders","positions","role","users","dataDoctors","allDoctors","detailDoctor","allScheduleTime","allRequiredDoctorInfo","adminReducer","state","action","type","FETCH_GENDER_START","copyState","FETCH_GENDER_SUCCESS","data","FETCH_GENDER_FAIL","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAIL","FETCH_ROLEID_SUCCESS","FETCH_ROLEID_FAIL","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAIL","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAIL","FETCH_ALL_DOCTOR_SUCCESS","dataDr","FETCH_ALL_DOCTOR_FAIL","FETCH_DETAIL_DOCTOR_SUCCESS","dataDetailDoctor","FETCH_DETAIL_DOCTOR_FAIL","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","dataTime","FETCH_ALLCODE_SCHEDULE_TIME_FAIL","FETCH_REQUIRED_DOCTOR_INFO_SUCCESS","FETCH_REQUIRED_DOCTOR_INFO_FAIL"],"sources":["/Users/namle/Desktop/fe-bookingcare/src/store/reducers/adminReducer.js"],"sourcesContent":["import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isloadingGender: false,\n    genders: [],\n    positions: [],\n    role: [],\n    users: [],\n    dataDoctors: [],\n    allDoctors: [],\n    detailDoctor: [],\n    allScheduleTime: [],\n    allRequiredDoctorInfo: [],\n}\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_GENDER_START:\n            let copyState = {...state};\n            copyState.isloadingGender = true\n            return {\n                ...copyState,\n            }\n        case actionTypes.FETCH_GENDER_SUCCESS:\n            state.isloadingGender = false\n            state.genders = action.data\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_GENDER_FAIL:\n            state.isloadingGender = false\n            state.genders = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_POSITION_SUCCESS:\n            state.positions = action.data\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_POSITION_FAIL:\n            state.positions = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ROLEID_SUCCESS:\n            state.role = action.data\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ROLEID_FAIL:\n            state.role = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALL_USER_SUCCESS:\n            state.users = action.users\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALL_USER_FAIL:\n            state.users = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\n            state.dataDoctors = action.dataDoctors\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_TOP_DOCTOR_FAIL:\n            state.dataDoctors = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\n            state.allDoctors = action.dataDr\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALL_DOCTOR_FAIL:\n            state.allDoctors = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_DETAIL_DOCTOR_SUCCESS:\n            state.detailDoctor = action.dataDetailDoctor\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_DETAIL_DOCTOR_FAIL:\n            state.detailDoctor = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\n            state.allScheduleTime = action.dataTime\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAIL:\n            state.allScheduleTime = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS:\n            state.allRequiredDoctorInfo = action.data\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAIL:\n            state.allRequiredDoctorInfo = []\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default adminReducer;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,YAAY,GAAG;EACjBC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,EAAE;EACdC,YAAY,EAAE,EAAE;EAChBC,eAAe,EAAE,EAAE;EACnBC,qBAAqB,EAAE;AAC3B,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGZ,YAAY,EAAEa,MAAM,KAAK;EACnD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKf,WAAW,CAACgB,kBAAkB;MAC/B,IAAIC,SAAS,GAAG;QAAC,GAAGJ;MAAK,CAAC;MAC1BI,SAAS,CAACf,eAAe,GAAG,IAAI;MAChC,OAAO;QACH,GAAGe;MACP,CAAC;IACL,KAAKjB,WAAW,CAACkB,oBAAoB;MACjCL,KAAK,CAACX,eAAe,GAAG,KAAK;MAC7BW,KAAK,CAACV,OAAO,GAAGW,MAAM,CAACK,IAAI;MAC3B,OAAO;QACH,GAAGN;MACP,CAAC;IACL,KAAKb,WAAW,CAACoB,iBAAiB;MAC9BP,KAAK,CAACX,eAAe,GAAG,KAAK;MAC7BW,KAAK,CAACV,OAAO,GAAG,EAAE;MAClB,OAAO;QACH,GAAGU;MACP,CAAC;IACL,KAAKb,WAAW,CAACqB,sBAAsB;MACnCR,KAAK,CAACT,SAAS,GAAGU,MAAM,CAACK,IAAI;MAC7B,OAAO;QACH,GAAGN;MACP,CAAC;IACL,KAAKb,WAAW,CAACsB,mBAAmB;MAChCT,KAAK,CAACT,SAAS,GAAG,EAAE;MACpB,OAAO;QACH,GAAGS;MACP,CAAC;IACL,KAAKb,WAAW,CAACuB,oBAAoB;MACjCV,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACK,IAAI;MACxB,OAAO;QACH,GAAGN;MACP,CAAC;IACL,KAAKb,WAAW,CAACwB,iBAAiB;MAC9BX,KAAK,CAACR,IAAI,GAAG,EAAE;MACf,OAAO;QACH,GAAGQ;MACP,CAAC;IACL,KAAKb,WAAW,CAACyB,sBAAsB;MACnCZ,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACR,KAAK;MAC1B,OAAO;QACH,GAAGO;MACP,CAAC;IACL,KAAKb,WAAW,CAAC0B,mBAAmB;MAChCb,KAAK,CAACP,KAAK,GAAG,EAAE;MAChB,OAAO;QACH,GAAGO;MACP,CAAC;IACL,KAAKb,WAAW,CAAC2B,wBAAwB;MACrCd,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACP,WAAW;MACtC,OAAO;QACH,GAAGM;MACP,CAAC;IACL,KAAKb,WAAW,CAAC4B,qBAAqB;MAClCf,KAAK,CAACN,WAAW,GAAG,EAAE;MACtB,OAAO;QACH,GAAGM;MACP,CAAC;IACL,KAAKb,WAAW,CAAC6B,wBAAwB;MACrChB,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACgB,MAAM;MAChC,OAAO;QACH,GAAGjB;MACP,CAAC;IACL,KAAKb,WAAW,CAAC+B,qBAAqB;MAClClB,KAAK,CAACL,UAAU,GAAG,EAAE;MACrB,OAAO;QACH,GAAGK;MACP,CAAC;IACL,KAAKb,WAAW,CAACgC,2BAA2B;MACxCnB,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACmB,gBAAgB;MAC5C,OAAO;QACH,GAAGpB;MACP,CAAC;IACL,KAAKb,WAAW,CAACkC,wBAAwB;MACrCrB,KAAK,CAACJ,YAAY,GAAG,EAAE;MACvB,OAAO;QACH,GAAGI;MACP,CAAC;IACL,KAAKb,WAAW,CAACmC,mCAAmC;MAChDtB,KAAK,CAACH,eAAe,GAAGI,MAAM,CAACsB,QAAQ;MACvC,OAAO;QACH,GAAGvB;MACP,CAAC;IACL,KAAKb,WAAW,CAACqC,gCAAgC;MAC7CxB,KAAK,CAACH,eAAe,GAAG,EAAE;MAC1B,OAAO;QACH,GAAGG;MACP,CAAC;IACL,KAAKb,WAAW,CAACsC,kCAAkC;MAC/CzB,KAAK,CAACF,qBAAqB,GAAGG,MAAM,CAACK,IAAI;MACzC,OAAO;QACH,GAAGN;MACP,CAAC;IACL,KAAKb,WAAW,CAACuC,+BAA+B;MAC5C1B,KAAK,CAACF,qBAAqB,GAAG,EAAE;MAChC,OAAO;QACH,GAAGE;MACP,CAAC;IACL;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module"}